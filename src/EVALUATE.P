

unit evaluate;
    interface
	
	   uses  MemTypes,QuickDraw,OSIntf,ToolIntf,PackIntf,PrintTraps,PasLibIntf,
             globals,help,text,cmmnds1,pusherr,pushStack,
			 ruleAtoF,rules050,rules100,rules150,rules200,rules250,rules300,
			 rules350,rules400,rules450,rules500;
			 
		procedure evalTempRule(i:longint);	
		procedure eval;
		procedure executeRule(i:longint);
        procedure changes(i:longint);
		
implementation


procedure evalTempRule(i:longint);
(***********************************************************)
(*                                                         *)
(*    Evaluates temporary theorems that have been added    *)
(*    by the user.  the postfix string for each rewrite    *)
(*    is in TRULES.  parallel stacks TSTACKL and TSTACKU   *)
(*    are used for this interpretation step.               *)
(*                                                         *)
(*      + is denoted by 1000, - by 1001, * by 1002,        *)
(*      / by 1003, = by 1004, <= by 1005, and              *)
(*      >= by 1006                                         *)
(*      all constants are assumed to be positive values    *)
(*      and are stored in TRULES as their negative         *)
(*      equivalents.                                       *)
(*                                                         *)
(***********************************************************)
var p,parm,tnext,last: longint;
    l,l1,u,u1,z1,z2,zt:real;
    tstackl,tstacku:array[1..20] of real;
    srule:char5;
    r5:char;
begin if tempactive[i] then 
 begin
  rule:=' TT/ ';
  numToChar(i,r5);
  rule[5]:=r5;
  if i > 9 then
          begin
            numToChar(i div 10,r5);
            rule[4]:=r5;
          end;
  tnext:=tspoint[tsp[i]];
  if i < ntt then last:=tspoint[tsp[i+1]]-1
             else last:=trmax;
  while (tnext < last) and (errcode = 0) do
    begin
      parm:=trules[tnext];
      ttop:=0;
      tnext:=tnext+1;
      p:=trules[tnext];
      while p < 1004 do
          begin
            if (p > 0) and (p < 1000) then
                       begin    (*    variable name    *)
                         ttop:=ttop+1;
                         if p <> spectr then
                             begin
                               z2:=min[p];
                               z1:=max[p];
                              end
                           else
                             begin
                               z2:=lammin;
                               z1:=lammax;
                             end;
                       end
                else
                  if p < 1 then
                     begin      (*     constant        *)
                       ttop:=ttop+1;
                       z2:=-p;
                       z1:=-p;
                     end
                 else
                   begin        (*    operator         *)
                     ttop:=ttop-1;
                     l:=tstackl[ttop];
                     l1:=tstackl[ttop+1];
                     u:=tstacku[ttop];
                     u1:=tstacku[ttop+1];
                     case p of
                 1000: begin     (*    add       *)
                         if (l=infinity) or (l1=infinity) then z2:=infinity
                                                          else z2:=l+l1;
                         if (u=infinity) or (u1=infinity) then z1:=infinity
                                                          else z1:=u+u1;
                       end;
                 1001: begin     (*    subtract   *)
                         if l=infinity then z2:=infinity
                                       else if u1=infinity then z2:=0
                                                           else z2:=l-u1;
                         if u=infinity then z1:=infinity
                                       else if l1=infinity then z1:=0
                                                           else z1:=u-l1;
                       end;
                 1002: begin      (*     multiply   *)
                         if (u=infinity) or (u1=infinity) then z1:=infinity
                                                          else z1:=u*u1;
                         if (l=infinity) or (l1=infinity) then zt:=infinity
                                                          else zt:=l*l1;
                         if zt <=z1 then z2:=zt
                                    else
                                      begin
                                        z2:=z1;
                                        z1:=zt;
                                      end;
                         if (u=infinity) or (l1=infinity) then zt:=infinity
                                                          else zt:=u*l1;
                         if zt > z1 then z1:=zt
                                    else if zt < z2 then z2:=zt;
                         if (l=infinity) or (u1=infinity) then zt:=infinity
                                                          else zt:=l*u1;
                         if zt > z1 then z1:=zt
                                    else if zt < z2 then z2:=zt;
                        end;
                 1003: begin     (*   divide(longint)  *)
                         if (l1=0) or (u=infinity) then z1:=infinity
                             else if l1=infinity then z1:=0
                                                 else z1:=u/l1;
                         if (u1=0) or (l=infinity) then zt:=infinity
                              else if u1=infinity then zt:=0
                                                  else zt:=l/u1;
                         if zt <= z1 then z2:=zt
                               else
                                 begin
                                   z2:=z1;
                                   z1:=zt;
                                 end;
                         if (u1=0) or (u=infinity) then zt:=infinity
                             else if u1=infinity then zt:=0
                                                 else zt:=u/u1;
                         if zt > z1 then z1:=zt
                                    else if zt < z2 then z2:=zt;
                         if (l1=0) or (l=infinity) then zt:=infinity
                             else if l1=infinity then zt:=0
                                                 else zt:=l/l1;
                         if zt > z1 then z1:=zt
                                    else if zt < z2 then z2:=zt;
                       end;
                     end;
                    end;
              tstackl[ttop]:=z2;
              tstacku[ttop]:=z1;
              tnext:=tnext+1;
              p:=trules[tnext];
            end;
       if (p > 1006) or (p < 1004) or (ttop <> 1) then 
           begin
             deleteTempTheorem(i);
             error(8);
           end
        else
          begin
            z:=trunk(tstacku[1]);
            if savesw then
            begin
              srule:=rule;
              rule:=blk5;
              cart:=blk;
              push(-10000-i);
              if errcode = 0 then rule:=srule;
            end;
       if errcode = 0 then
       case p of
        1004: begin     (*   parm = ....    *)
               if parm <> spectr then
                  begin
                    if z < max[parm] then pushmax(parm);
                    if errcode = 0 then 
                      begin
                        p:=round(tstackl[1]+hf);
                        if p <> z+1 then z:=p;
                        if z > min[parm] then pushmin(parm);
                      end;
                  end
                else
                  begin
                    rz:=tstacku[1];
                    if rz < lammax then pushlammax;
                    if errcode = 0 then
                       begin
                         rz:=tstackl[1];
                         if rz > lammin then pushlammin;
                       end;
                  end;
               end;
        1005: begin     (*   parm <= ....   *)
                if parm <> spectr then
                  begin
                    if z < max[parm] then pushmax(parm);
                  end
                 else
                   begin
                     rz:=tstacku[1];
                     if rz < lammax then pushlammax;
                    end;
               end;
        1006: begin     (*   parm >= ....   *)
                 if parm <> spectr then
                     begin
                        z:=round(tstackl[1]+hf);
                        if z > min[parm] then pushmin(parm);
                      end
                  else
                    begin
                      rz:=tstackl[1];
                      if rz > lammin then pushlammin;
                    end;
               end;
             end;
           end;
       if errcode = 0 then tnext:=tnext+1;
     end;
  if errcode = 0 then rule:=blk5;
 end;
end;


procedure eval;
(****************************************************)
(*                                                  *)
(*                                                  *)
(*       executes the rules involving               *)
(*       the invariant 'X'.                         *)
(*                                                  *)
(*       numeric rules and alphabetic rules must    *)
(*       be grouped separately. alphabetic rules    *)
(*       must be preceded by                        *)
(*              rule:=blk5;                         *)
(*                                                  *)
(****************************************************)
var i:longint;
begin
  while (stack > 0) and (errcode = 0) do
    begin
      while (stack > 0) and (errcode = 0) do
        begin
          pop(x);
          i:=direction[x];
          case x of
          nodes: begin
                    nthms:=nthms+78;
                    r030;r035;r040;r042;r049;r050;r052;r057;r059;r067;
                    r068;r072;r073;r077;r078;r086;r093;r094;r095;r118;
                    r120;r126;r127;r128;r130;r132;r133;r138;r152;r160;
                    r161;r162;r180;r184;r186;r187;r196;r197;r204;r207;
                    r239;r240;r246;r258;r271;r281;r282;r285;r292;r316;
                    r317;r320;r326;r332;r335;r343;r344;r348;r349;r350;
                    r351;r360;r381;r391;r400;r403;r406;r411;r416;r419;
                    r420;r421;r424;r435;r442;r444;r450;r451;
                    if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+161;
                        r001;r003;r005;r007;r008;r009;r011;r021;r024;r026;
                        r027;r028;r031;r033;r036;r037;r044;r053;r056;r058;
                        r060;r062;r063;r065;r071;r076;r081;r082;r091;r092;
                        r096;r101;r108;r112;r116;r117;r119;r121;r122;r123;
                        r125;r129;r139;r140;r141;r143;r146;r147;r163;r175;
                        r178;r179;r182;r188;r189;r195;r198;r199;r203;r205;
                        r206;r208;r209;r210;r211;r241;r242;r243;r244;r245;
                        r247;r250;r253;r254;r259;r270;r274;r279;r280;r288;
                        r289;r290;r291;r294;r295;r297;r298;r299;r300;r301;
                        r302;r303;r310;r311;r314;r318;r325;r329;r330;r331;
                        r334;r336;r337;r338;r342;r345;r352;r353;r354;r355;
                        r358;r365;r367;r368;r376;r379;r382;r383;r384;r387;
                        r388;r392;r393;r394;r395;r396;r398;r401;r402;r404;
                        r407;r409;r414;r415;r422;r423;r425;r426;r427;r428;
                        r429;r430;r431;r432;r433;r434;r436;r437;r439;r441;
                        r443;r445;r446;r447;r448;r449;r453;r454;r455;r457;
                        r458;
                      end;
                    if (i = 0) or (i = 2) then
                       begin
                         nthms:=nthms+81;
                         r012;r015;r020;r025;r032;r038;r055;r064;r075;r080;
		         r097;r115;r124;r134;r145;r151;r155;r156;r158;r159;
		         r166;r169;r170;r173;r174;r181;r183;r200;r201;r202;
		         r233;r234;r248;r249;r255;r256;r260;r263;r265;r266;
                         r269;r276;r277;r278;r283;r284;r286;r293;r304;r305;
                         r306;r307;r308;r309;r312;r313;r315;r321;r322;r323;
                         r324;r347;r356;r357;r359;r363;r364;r366;r375;r385;
                         r389;r390;r399;r408;r412;r413;r417;r418;r438;r440;
                         r452;
                       end;
                  end;
          edges: begin
                    nthms:=nthms+8;
		    r030;r049;r050;r133;r281;r351;r406;r416;
                    if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+55;
                        r004;r015;r029;r036;r055;r069;r071;r075;r093;r094;
                        r095;r113;r114;r115;r120;r130;r134;r135;r144;r158;
                        r164;r166;r169;r170;r184;r208;r251;r255;r260;r284;
                        r286;r306;r317;r319;r333;r335;r336;r342;r363;r364;
                        r384;r400;r408;r417;r418;r421;r424;r429;r438;r439;
                        r440;r442;r445;r446;r447;
                      end;
                    if (i = 0) or (i = 2) then
                       begin
                         nthms:=nthms+71;
                         r001;r003;r005;r017;r019;r022;r026;r033;r037;r056;
                         r060;r063;r065;r077;r078;r106;r118;r122;r128;r136;
                         r138;r139;r140;r141;r143;r152;r175;r179;r188;r195;
                         r196;r204;r235;r236;r258;r290;r295;r327;r330;r331;
                         r337;r343;r344;r345;r346;r348;r349;r350;r352;r353;
                         r354;r379;r381;r382;r391;r394;r396;r401;r409;r413;
                         r414;r419;r420;r426;r445;r448;r449;r452;r453;r454;
                         r455;
                       end;
                  end;
          maxdeg: begin
                    nthms:=nthms+35;
                    r022;r042;r045;r046;r052;r067;r086;r127;r128;r130;
                    r136;r148;r149;r150;r153;r155;r157;r160;r180;r187;
                    r207;r252;r256;r265;r283;r288;r311;r316;r324;r360;
                    r389;r400;r416;r435;r441;
                    if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+75;
                        r006;r012;r020;r027;r036;r038;r056;r071;r107;r131;
                        r132;r159;r167;r168;r174;r181;r196;r205;r206;r209;
                        r210;r211;r217;r236;r247;r248;r263;r266;r277;r278;
                        r284;r285;r293;r296;r298;r299;r300;r301;r302;r303;
                        r305;r306;r307;r309;r310;r312;r318;r319;r323;r327;
                        r332;r347;r377;r399;r401;r417;r418;r424;r428;r429;
                        r431;r432;r446;r447;r448;
                      end;
                    if (i = 0) or (i = 2) then
                       begin
                         nthms:=nthms+34;
                         r008;r019;r028;r055;r147;r151;r165;r216;r243;r253;
                         r274;r275;r279;r286;r292;r317;r338;r341;r355;r356;
                         r357;r361;r362;r383;r398;r404;r407;r408;r412;r423;
                         r433;r434;r436;r437;
                       end;
                  end;
          mindeg:  begin
                     nthms:=nthms+30;
                     r015;r040;r045;r046;r057;r077;r086;r093;r148;r155;
                     r156;r161;r205;r281;r283;r304;r321;r322;r324;r329;
                     r359;r361;r391;r411;r412;r416;r427;r436;r450;r451;
                    if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+21;
                        r056;r081;r118;r129;r159;r160;r174;r202;r206;r207;
                        r210;r219;r254;r265;r266;r267;r276;r292;r293;r330;
                        r448;
                        end;
                    if (i = 0) or (i = 2) then
                       begin
                         nthms:=nthms+104;
                         r007;r008;r024;r048;r054;r055;r060;r062;r071;r082;
                         r087;r091;r092;r099;r103;r107;r110;r112;r113;r117;
		         r119;r123;r126;r132;r162;r163;r171;r176;r178;r182;
                         r184;r192;r201;r218;r230;r232;r245;r247;r248;r258;
                         r271;r286;r287;r291;r296;r298;r299;r300;r301;r302;
                         r303;r305;r307;r309;r310;r312;r313;r314;r315;r317;
                         r320;r325;r331;r334;r337;r338;r339;r340;r341;r346;
                         r351;r352;r355;r358;r362;r367;r378;r382;r386;r387;
                         r388;r392;r393;r395;r396;r398;r401;r402;r403;r404;
                         r405;r406;r407;r410;r415;r425;r428;r432;r437;r443;
                         r444;r449;r454;r455;
                       end;
                   end;
          chr:     begin
                     nthms:=nthms+8;
                     r041;r049;r067;r120;r185;r261;r262;r286;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+11;
                        r020;r032;r053;r069;r070;r106;r198;r220;r233;r275;
                        r423;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+32;
                        r002;r018;r031;r048;r051;r085;r097;r098;r104;r105;
                        r106;r115;r119;r121;r131;r144;r147;r157;r167;r168;
                        r180;r221;r228;r231;r241;r242;r259;r311;r413;r445;
                        r456;r457;
                     end;
                    end;
          clique:   begin
                     nthms:=nthms+13;
                     r039;r049;r085;r147;r176;r185;r196;r203;r204;r207;
                     r421;r451;r453;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+46;
                        r002;r005;r017;r019;r035;r052;r058;r084;r088;r097;
                        r103;r104;r105;r119;r131;r145;r152;r157;r160;r173;
                        r174;r182;r183;r192;r195;r209;r210;r234;r241;r276;
                        r284;r288;r306;r311;r369;r389;r390;r394;r409;r417;
                        r418;r419;r420;r421;r424;r429;r441;r442;r446;r447;
                        r449;r452;r454;r455;r456;r457;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+13;
                        r029;r054;r081;r108;r113;r114;r184;r187;r194;r202;
                        r220;r294;r458;
                      end;
                    end;
          spectr:  begin
                     nthms:=nthms+14;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+7;
                        r003;r052;r150;r165;r238;r366;r410;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+ 7;
                        r004;r006;r058;r069;r164;r318;r319;
                     end;
                    end;
          ncov:  begin
                     nthms:=nthms+7;
                     r020;r049;r061;r100;r204;r239;r419;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+19;
                        r002;r004;r019;r036;r073;r106;r172;r193;r199;r202;
                        r218;r221;r222;r236;r248;r385;r435;r443;r456;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+34;
                        r035;r101;r109;r114;r135;r198;r200;r201;r203;r206;
                        r207;r208;r209;r210;r211;r237;r250;r384;r422;r423;
                        r424;r425;r429;r430;r431;r432;r436;r437;r439;r441;
                        r442;r445;r446;r447;
                     end;
                    end;
          ecov:  begin
                     nthms:=nthms+2;
                     r049;r240;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r023;r025;r036;r212;r439;r440;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+10;
                        r027;r073;r101;r205;r426;r427;r428;r433;r434;r444;
                     end;
                    end;
          nind:   begin
                     nthms:=nthms+14;
                     r040;r049;r061;r062;r064;r100;r152;r179;r239;r254;
                     r308;r420;r451;r452;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+53;
                        r019;r020;r035;r075;r079;r106;r108;r111;r112;r133;
                        r145;r159;r160;r169;r170;r173;r174;r178;r181;r182;
                        r183;r186;r192;r214;r233;r237;r244;r249;r269;r275;
                        r284;r287;r306;r323;r324;r361;r362;r385;r389;r390;
                        r394;r413;r417;r418;r421;r438;r440;r449;r450;r454;
                        r455;r458;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+12;
                        r062;r073;r081;r113;r187;r195;r196;r223;r247;r360;
                        r402;r457;
                      end;
                    end;
          eind:   begin
                     nthms:=nthms+5;
                     r049;r128;r136;r240;r295;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+25;
                        r012;r020;r022;r023;r036;r073;r079;r086;r100;r109;
                        r155;r156;r200;r201;r213;r235;r252;r257;r304;r305;
                        r312;r356;r357;r403;r412;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+4;
                        r011;r222;r384;r438;
                     end;
                    end;
          nccov:  begin
                     nthms:=nthms+6;
                     r020;r040;r049;r185;r448;r453;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r032;r076;r223;r234;r276;r285;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+15;
                        r031;r073;r108;r143;r178;r181;r186;r211;r212;r224;
                        r242;r244;r254;r450;r458;
                      end;
                    end;
          eccov:  begin
                     nthms:=nthms+1;
                     r040;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+5;
                        r017;r122;r224;r321;r322;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+12;
                        r009;r023;r029;r061;r076;r100;r197;r245;r246;r285;
                        r294;r385;
                     end;
                    end;
          radius:  begin
                     nthms:=nthms+4;
                     r042;r044;r049;r267;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+5;
                        r010;r079;r153;r263;r278;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+5;
                        r030;r134;r225;r273;r279;
                     end;
                   end;
          diam:    begin
                     nthms:=nthms+21;
                     r007;r028;r044;r093;r094;r095;r099;r121;r129;r130;
                     r146;r166;r257;r264;r267;r288;r363;r364;r400;r405;
                     r411;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+16;
                        r034;r063;r124;r134;r225;r256;r265;r266;r272;r273;
                        r292;r293;r307;r347;r399;r408;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+9;
                        r010;r040;r111;r172;r192;r325;r334;r395;r414;
                     end;
                   end;
          genus:   begin
                     nthms:=nthms+14;
                     r047;r070;r083;r084;r087;r088;r089;r125;r158;r161;
                     r171;r370;r373;r397;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+16;
                        r018;r060;r061;r085;r090;r098;r245;r246;r258;r261;
                        r262;r346;r369;r374;r375;r385;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r021;r116;r229;r260;r297;r376;
                     end;
                    end;
          nconn:    begin
                      nthms:=nthms+16;
                      r016;r044;r049;r064;r092;r094;r151;r257;r299;r300;
                      r358;r359;r363;r364;r403;r444;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+14;
                        r001;r062;r073;r117;r272;r277;r296;r331;r347;r351;
                        r360;r399;r401;r435;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+31;
                        r007;r028;r034;r060;r066;r121;r162;r163;r166;r200;
                        r226;r252;r253;r258;r281;r283;r297;r298;r300;r302;
                        r308;r309;r310;r313;r314;r315;r328;r346;r404;r405;
                        r414;r430;
                     end;
                   end;
          econn:   begin
                     nthms:=nthms+5;
                     r016;r095;r123;r307;r404;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+9;
                        r082;r099;r126;r226;r351;r381;r382;r405;r406;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+9;
                        r088;r089;r148;r219;r277;r296;r304;r312;r427;
                     end;
                   end;
          echr:    begin
                     nthms:=nthms+19;
                     r049;r068;r316;r416;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+7;
                        r022;r151;r190;r216;r235;r356;r433;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+8;
                        r020;r102;r127;r148;r149;r150;r217;r317;
                     end;
                   end;
          girth:   begin
                     nthms:=nthms+25;
                     r020;r024;r039;r049;r050;r060;r070;r071;r080;r089;
                     r090;r096;r125;r139;r188;r251;r292;r325;r329;r338;
                     r344;r351;r367;r392;r393;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+5;
                        r319;r337;r342;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+57;
                        r015;r034;r053;r078;r079;r091;r098;r110;r161;r164;
                        r167;r168;r171;r227;r252;r253;r259;r261;r262;r268;
                        r269;r274;r318;r320;r323;r324;r334;r339;r340;r341;
                        r342;r343;r345;r346;r348;r349;r350;r352;r353;r354;
                        r355;r361;r362;r383;r386;r387;r388;r395;r396;r397;
                        r398;r412;r422;r431;r432;r436;r437;
                     end;
                   end;
          circ:    begin
                     nthms:=nthms+4;
                     r020;r049;r050;r072;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+13;
                        r078;r092;r103;r104;r105;r110;r118;r138;r139;r141;
                        r227;r228;r230;r271;r283;r308;r309;r313;r314;r315;
                        r359;r391;r430;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r071;r079;r092;r270;r289;r383;
                     end;
                   end;
          ncomp:   begin
                     nthms:=nthms+2;
                     r044;r050;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r015;r115;r135;r260;r305;r428;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+21;
                        r008;r037;r060;r071;r197;r215;r245;r246;r280;r339;
                        r344;r346;r348;r349;r350;r379;r383;r386;r398;r402;
                        r443;
                     end;
                   end;
          xnum:    begin
                     nthms:=nthms+2;
                     r049;r140;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+1;
                        r229;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+3;
                        r054;r059;r365;
                     end;
                   end;
          arbor:   begin
                     nthms:=nthms+2;
                     r049;r050;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+2;
                        r051;r073;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+10;
                        r052;r053;r054;r083;r084;r096;r251;r268;r371;r397;
                     end;
                   end;
          earbor:  begin
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+4;
                        r371;r372;r378;r379;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+4;
                        r373;r375;r377;r380;
                     end;
                  end;
          dom:     begin
                     nthms:=nthms+1;
                     r264;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r038;r215;r339;r340;r341;r386;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+20;
                        r026;r033;r179;r213;r214;r215;r243;r270;r272;r289;
                        r290;r291;r334;r337;r338;r387;r388;r405;r407;r415;
                     end;
                   end;
          bwidth:  begin
                     nthms:=nthms+3;
                     r049;r175;r335;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+13;
                        r036;r102;r124;r176;r191;r231;r232;r237;r249;r250;
                        r268;r269;r422;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+9;
                        r146;r153;r199;r280;r332;r333;r336;r402;r443;
                     end;
                   end;
          thick:   begin
                     nthms:=nthms+2;
                     r047;r370;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r188;r194;r197;r328;r376;r380;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+12;
                        r189;r190;r191;r193;r255;r258;r326;r327;r368;r369;
                        r372;r374;
                     end;
                   end;
          compl:   begin
                     nthms:=nthms+2;
                     r040;r068;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+8;
                        r052;r067;r080;r170;r208;r292;r321;r322;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+2;
                        r020;r117;
                     end;
                   end;
          bipart:  begin
                     nthms:=nthms+1;
                     r041;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+6;
                        r116;r282;r288;r298;r325;r367;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+5;
                        r301;r303;r326;r365;r368;
                     end;
                   end;
          connct:  begin
                     nthms:=nthms+10;
                     r043;r044;r045;r111;r146;r158;r160;r170;r172;r201;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+2;
                        r101;r124;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+29;
                        r030;r052;r063;r067;r112;r172;r207;r208;r255;r264;
                        r265;r278;r279;r284;r289;r290;r292;r293;r320;r321;
                        r322;r325;r334;r338;r366;r375;r395;r411;r424;
                     end;
                   end;
          forest:  begin
                     nthms:=nthms+4;
                     r043;r048;r049;r050;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+12;
                        r268;r269;r270;r344;r345;r346;r348;r349;r350;r354;
                        r383;r412;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+4;
                        r079;r280;r396;r422;
                     end;
                   end;
          tree:    begin
                     nthms:=nthms+1;
                     r043;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+4;
                        r034;r289;r292;r395;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+2;
                        r273;r332;
                     end;
                   end;
          cycle:   begin
                     nthms:=nthms+5;
                     r045;r049;r067;r160;r207;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+2;
                        r052;r292;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+2;
                        r282;r424;
                     end;
                   end;
          reg:     begin
                     nthms:=nthms+5;
                     r046;r049;r057;r081;r202;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+4;
                        r068;r161;r292;r393;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+29;
                        r052;r148;r151;r162;r163;r180;r187;r288;r304;r313;
                        r314;r315;r316;r320;r321;r322;r325;r329;r356;r357;
                        r360;r367;r375;r403;r427;r433;r434;r435;r444;
                     end;
                   end;
          hamil:   begin
                     nthms:=nthms+9;
                     r064;r065;r066;r072;r073;r077;r112;r120;r162;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+16;
                        r092;r161;r163;r281;r289;r297;r301;r302;r303;r309;
                        r310;r313;r314;r315;r330;r358;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+4;
                        r127;r274;r359;r409;
                     end;
                   end;
          plnar:  begin
                     nthms:=nthms+4;
                     r035;r036;r047;r054;
                     if (i= 1) or (i = 2) then
                      begin
                        nthms:=nthms+3;
                        r048;r298;r300;
                      end;
                     if (i = 0) or (i = 2) then
                      begin
                        nthms:=nthms+13;
                        r066;r148;r149;r287;r301;r302;r309;r310;r351;r381;
                        r382;r401;r425;
                     end;
                   end;
          end;
     end;
   for i:=1 to ntt do 
            if errcode = 0 then evalTempRule(i);
 end;
if errcode = 0 then
     begin
       moveCurToCopyI(copyptr);
       primary:=numtables;
       rtopcopy[copyptr]:=ruletop;
     end;
end;

procedure changes(i:longint);
(************************************)
(*                                  *)
(*      if an activated rule causes *)
(*      a change, evaluate the      *)
(*      other rules. If not,        *)
(*      reset to prior table.       *)
(*                                  *)
(************************************)
var t:longint;
    alphat:char;
begin
  if errcode = 0 then
    if stack > 0 then
      begin
        cflag:=true;
        if i > 0 then action:='TT-   '
                 else action:=' R-   ';
        biaction:='act';
        actionrel:='  ';
        t:=7;
        i:=abs(i);
        while i > 0 do
           begin
             t:=t-1;
             numToChar(i,alphat);
             action[t]:=alphat;
             i:=i div 10;
           end;
        if errcode = 0 then eval;
      end
     else 
       begin
         cflag:=false;
         writeln(' No changes made.');
         moveForward;
         if errcode = 0 then savesw:=true;
       end;
end;

procedure executerule(i:longint);
(************************************************************)
(*                                                          *)
(*      causes the execution of the single rule i and       *)
(*      any rules that might be affected by rule i.         *)
(*                                                          *)
(************************************************************)
begin
  if errcode = 0 then
begin
 if not trace then
    begin
      rule:=blk5;
      cart:=blk;
      savesw:=true;
      push(-i);
      if errcode = 0 then
       begin
         activerule[i]:=true;
         write(sysm:1,' Theorem',i:4,': reactivated.');
       end;
     end;
  nthms:=nthms+1;
  if errcode = 0 then
  case i of
          1:r001;  2:r002;  3:r003;  4:r004;  5:r005;  6:r006;  7:r007; 
          8:r008;  9:r009; 10:r010; 11:r011; 12:r012; 13:    ; 14:    ;
         15:r015; 16:r016; 17:r017; 18:r018; 19:r019; 20:r020; 21:r021;
         22:r022; 23:r023; 24:r024; 25:r025; 26:r026; 27:r027; 28:r028;
         29:r029; 30:r030; 31:r031; 32:r032; 33:r033; 34:r034; 35:r035;
         36:r036; 37:r037; 38:r038; 39:r039; 40:r040; 41:r041; 42:r042;
         43:r043; 44:r044; 45:r045; 46:r046; 47:r047; 48:r048; 49:r049;
         50:r050; 51:r051; 52:r052; 53:r053; 54:r054; 55:r055; 56:r056;
         57:r057; 58:r058; 59:r059; 60:r060; 61:r061; 62:r062; 63:r063;
         64:r064; 65:r065; 66:r066; 67:r067; 68:r068; 69:r069; 70:r070;
         71:r071; 72:r072; 73:r073; 74:    ; 75:r075; 76:r076; 77:r077;
         78:r078; 79:r079; 80:r080; 81:r081; 82:r082; 83:r083; 84:r084;
         85:r085; 86:r086; 87:r087; 88:r088; 89:r089; 90:r090; 91:r091;
         92:r092; 93:r093; 94:r094; 95:r095; 96:r096; 97:r097; 98:r098;
         99:r099;100:r100;101:r101;102:r102;103:r103;104:r104;105:r105;
        106:r106;107:r107;108:r108;109:r109;110:r110;111:r111;112:r112;
        113:r113;114:r114;115:r115;116:r116;117:r117;118:r118;119:r119;
        120:r120;121:r121;122:r122;123:r123;124:r124;125:r125;126:r126;
        127:r127;128:r128;129:r129;130:r130;131:r131;132:r132;133:r133;
        134:r134;135:r135;136:r136;137:    ;138:r138;139:r139;140:r140;
        141:r141;142:    ;143:r143;144:r144;145:r145;146:r146;147:r147;
        148:r148;149:r149;150:r150;151:r151;152:r152;153:r153;154:    ;
        155:r155;156:r156;157:r157;158:r158;159:r159;160:r160;161:r161;
        162:r162;163:r163;164:r164;165:r165;166:r166;167:r167;168:r168;
        169:r169;170:r170;171:r171;172:r172;173:r173;174:r174;175:r175;
        176:r176;177:    ;178:r178;179:r179;180:r180;181:r181;182:r182;
        183:r183;184:r184;185:r185;186:r186;187:r187;188:r188;189:r189;
        190:r190;191:r191;192:r192;193:r193;194:r194;195:r195;196:r196;
        197:r197;198:r198;199:r199;200:r200;201:r201;202:r202;203:r203;
        204:r204;205:r205;206:r206;207:r207;208:r208;209:r209;210:r210;
        211:r211;212:r212;213:r213;214:r214;215:r215;216:r216;217:r217;
        218:r218;219:r219;220:r220;221:r221;222:r222;223:r223;224:r224;
        225:r225;226:r226;227:r227;228:r228;229:r229;230:r230;231:r231;
        232:r232;233:r233;234:r234;235:r235;236:r236;237:r237;238:r238;
        239:r239;240:r240;241:r241;242:r242;243:r243;244:r244;245:r245;
        246:r246;247:r247;248:r248;249:r249;250:r250;251:r251;252:r252;
        253:r253;254:r254;255:r255;256:r256;257:r257;258:r258;259:r259;
        260:r260;261:r261;262:r262;263:r263;264:r264;265:r265;266:r266;
        267:r267;268:r268;269:r269;270:r270;271:r271;272:r272;273:r273;
        274:r274;275:r275;276:r276;277:r277;278:r278;279:r279;280:r280;
        281:r281;282:r282;283:r283;284:r284;285:r285;286:r286;287:r287;
        288:r288;289:r289;290:r290;291:r291;292:r292;293:r293;294:r294;
        295:r295;296:r296;297:r297;298:r298;299:r299;300:r300;301:r301;
        302:r302;303:r303;304:r304;305:r305;306:r306;307:r307;308:r308;
        309:r309;310:r310;311:r311;312:r312;313:r313;314:r314;315:r315;
        316:r316;317:r317;318:r318;319:r319;320:r320;321:r321;322:r322;
        323:r323;324:r324;325:r325;326:r326;327:r327;328:r328;329:r329;
        330:r330;331:r331;332:r332;333:r333;334:r334;335:r335;336:r336;
        337:r337;338:r338;339:r339;340:r340;341:r341;342:r342;343:r343;
        344:r344;345:r345;346:r346;347:r347;348:r348;349:r349;350:r350;
        351:r351;352:r352;353:r353;354:r354;355:r355;356:r356;357:r357;
        358:r358;359:r359;360:r360;361:r361;362:r362;363:r363;364:r364;
        365:r365;366:r366;367:r367;368:r368;369:r369;370:r370;371:r371;
        372:r372;373:r373;374:r374;375:r375;376:r376;377:r377;378:r378;
        379:r379;380:r380;381:r381;382:r382;383:r383;384:r384;385:r385;
        386:r386;387:r387;388:r388;389:r389;390:r390;391:r391;392:r392;
        393:r393;394:r394;395:r395;396:r396;397:r397;398:r398;399:r399;
        400:r400;401:r401;402:r402;403:r403;404:r404;405:r405;406:r406;
        407:r407;408:r408;409:r409;410:r410;411:r411;412:r412;413:r413;
        414:r414;415:r415;416:r416;417:r417;418:r418;419:r419;420:r420;
        421:r421;422:r422;423:r423;424:r424;425:r425;426:r426;427:r427;
        428:r428;429:r429;430:r430;431:r431;432:r432;433:r433;434:r434;
        435:r435;436:r436;437:r437;438:r438;439:r439;440:r440;441:r441;
        442:r442;443:r443;444:r444;445:r445;446:r446;447:r447;448:r448;
        449:r449;450:r450;451:r451;452:r452;453:r453;454:r454;455:r455;
        456:r456;457:r457;458:r458;459:r459;460:r460;
       end;
   if (not trace) and (errcode = 0) then 
          begin
            changes(-i);
            if cflag then writeln;
          end;
  end;
end;



end.

